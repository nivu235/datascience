# Import necessary libraries
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score

# Load the dataset
data = pd.read_csv("car_prices_dataset.csv")  # Replace with your dataset file

# Select a set of features (X) and the target variable (y)
selected_features = ['Engine_Size', 'Horsepower', 'Mileage', 'Year']  # Replace with your selected features
X = data[selected_features]
y = data['Price']

# Split the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Build and train the linear regression model
model = LinearRegression()
model.fit(X_train, y_train)

# Make predictions on the testing data
y_pred = model.predict(X_test)

# Evaluate the model's performance
mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)
print(f"Mean Squared Error: {mse}")
print(f"R-squared (R2): {r2}")

# Get the coefficients (importance) of the selected features
coefficients = pd.DataFrame({'Feature': selected_features, 'Coefficient': model.coef_})
coefficients.sort_values(by='Coefficient', ascending=False, inplace=True)

# Visualize the coefficients
plt.figure(figsize=(10, 6))
plt.barh(coefficients['Feature'], coefficients['Coefficient'])
plt.xlabel('Coefficient Value')
plt.title('Feature Importance for Car Price Prediction')
plt.show()

# Provide insights to the marketing team
print("Influential Factors affecting Car Prices:")
for index, row in coefficients.iterrows():
    print(f"{row['Feature']}: {row['Coefficient']}")

# Additional insights and recommendations can be provided based on the coefficient values
